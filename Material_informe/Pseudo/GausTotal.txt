Función GausTotal(A_, b_)
    A = convertir_a_matriz(A_)
    b = convertir_a_matriz(b_)
    n = tamaño_fila(A)
    M = concatenar((A, b), eje=1)
    cambi = []

    Para i en rango(n - 1) hacer
        a, b = desempaquetar(maximo_absoluto(M[i:, i:], (n - i, n - i)))
        
        Si b[0] + i != i entonces
            agregar_a(cambi, [i, b[0] + i])
            aux2 = copiar(M[:, b[0] + i])
            M[:, b[0] + i] = M[:, i]
            M[:, i] = aux2
        Fin Si
        
        Si a[0] + i != i entonces
            aux2 = copiar(M[i + a[0] - 1, i:n + 1])
            M[a[0] + i - 1, i:n + 1] = M[i, i:n + 1]
            M[i, i:n + 1] = aux2
        Fin Si
        
        Para j en rango(i + 1, n) hacer
            Si M[j, i] != 0 entonces
                M[j, i:n + 1] = M[j, i:n + 1] - (M[j, i] / M[i, i]) * M[i, i:n + 1]
            Fin Si
        Fin Para
    Fin Para

    x = SustitucionRegresiva(M)

    Para i en rango(longitud(cambi) - 1, -1, -1) hacer
        aux = x[cambi[i][0]]
        x[cambi[i][0]] = x[cambi[i][1]]
        x[cambi[i][1]] = aux
    Fin Para

    Devolver convertir_a_cadena(x)
Fin Función

Función SustitucionRegresiva(M)
    n = tamaño_fila(M)
    x = crear_arreglo(n)
    Para i en rango(n-1, -1, -1) hacer
        x[i] = (M[i, n] - producto_punto(M[i, i+1:n], x[i+1:n])) / M[i, i]
    Fin Para
    Devolver x
Fin Función

